===
mappings2/typeCheck.pkl
===

import "pkl:test"

local x1: Mapping<String, List<Int>> = new {
  when (false) { [0] = 0 }
  ["pigeon"] = List(1, 2, 3)
  ["barn owl"] = 42
}

local x2: Mapping<String, List<Int>> = new {
  when (false) { [0] = 0 }
  ["fr" + "ed"] = List(1) + List(2, 3)
  ["bar" + "ney"] = 21 + 21
}

local x3: Mapping<List<Int>, String> = new {
  when (false) {  [0] = 0 }
  [List(1, 2, 3)] = "pigeon"
  [42] = "barn owl"
}

local x4: Mapping<List<Int>, String> = new {
  when (false) { [0] = 0 }
  [List(1) + List(2, 3)] = "fr" + "ed"
  [21 + 21] = "bar" + "ney"
}

local x5: Mapping<String(!isEmpty), String> = new {
  when (false) { [0] = 0 }
  [""] = "pigeon"
}
local x6: Mapping<String, String(!isEmpty)> = new {
  when (false) { [0] = 0 }
  ["pigeon"] = ""
}

res1 = test.catch(() -> x1["barn owl"])
res2 = test.catch(() -> x2["barney"])
res3 = test.catch(() -> x3)
res4 = test.catch(() -> x4)
res5 = test.catch(() -> x5)
res6 = test.catch(() -> x6["pigeon"])

hidden x7: Mapping = new {
  when (true) {
    ["first"] = throw("value unnecessarily evaluated")
  }
  for (n in List(1)) {
    ["second"] = throw("value unnecessarily evaluated")
  }
}

hidden x8: Mapping<String, Any> = new {
  when (true) {
    ["first"] = throw("value unnecessarily evaluated")
  }
  for (n in List(1)) {
    ["second"] = throw("value unnecessarily evaluated")
  }
}

hidden x9: Mapping<String, unknown> = new {
  when (true) {
    ["first"] = throw("value unnecessarily evaluated")
  }
  for (n in List(1)) {
    ["second"] = throw("value unnecessarily evaluated")
  }
}

hidden x10 = new Mapping {
  when (true) {
    ["first"] = throw("value unnecessarily evaluated")
  }
  ["second"] = 42
  for (n in List(1)) {
    ["third"] = throw("value unnecessarily evaluated")
  }
}

res7 = !x7.isEmpty
res8 = !x8.isEmpty
res9 = !x9.isEmpty
res10 = x10["second"] == 42

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (declaredType
                (qualifiedIdentifier
                  (identifier))))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (intLiteralExpr)))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (declaredType
                (qualifiedIdentifier
                  (identifier))))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (additiveExpr
            (slStringLiteralExpr
              (slStringLiteralPart))
            (slStringLiteralExpr
              (slStringLiteralPart)))
          (additiveExpr
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)))
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)
                (intLiteralExpr)))))
        (objectEntry
          (additiveExpr
            (slStringLiteralExpr
              (slStringLiteralPart))
            (slStringLiteralExpr
              (slStringLiteralPart)))
          (additiveExpr
            (intLiteralExpr)
            (intLiteralExpr))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (declaredType
                (qualifiedIdentifier
                  (identifier)))))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)
              (intLiteralExpr)
              (intLiteralExpr)))
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (intLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (declaredType
                (qualifiedIdentifier
                  (identifier)))))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (additiveExpr
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)))
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)
                (intLiteralExpr))))
          (additiveExpr
            (slStringLiteralExpr
              (slStringLiteralPart))
            (slStringLiteralExpr
              (slStringLiteralPart))))
        (objectEntry
          (additiveExpr
            (intLiteralExpr)
            (intLiteralExpr))
          (additiveExpr
            (slStringLiteralExpr
              (slStringLiteralPart))
            (slStringLiteralExpr
              (slStringLiteralPart)))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (constrainedType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (logicalNotExpr
              (unqualifiedAccessExpr
                (identifier))))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (constrainedType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (logicalNotExpr
              (unqualifiedAccessExpr
                (identifier)))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectEntry
              (intLiteralExpr)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (slStringLiteralExpr)))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (subscriptExpr
            (unqualifiedAccessExpr
              (identifier))
            (slStringLiteralExpr
              (slStringLiteralPart)))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (subscriptExpr
            (unqualifiedAccessExpr
              (identifier))
            (slStringLiteralExpr
              (slStringLiteralPart)))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (unqualifiedAccessExpr
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (unqualifiedAccessExpr
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (unqualifiedAccessExpr
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (subscriptExpr
            (unqualifiedAccessExpr
              (identifier))
            (slStringLiteralExpr
              (slStringLiteralPart)))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (unknownType))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (intLiteralExpr))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectEntry
              (slStringLiteralExpr
                (slStringLiteralPart))
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (identifier)
    (logicalNotExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))))
  (classProperty
    (identifier)
    (logicalNotExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))))
  (classProperty
    (identifier)
    (logicalNotExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (subscriptExpr
        (unqualifiedAccessExpr
          (identifier))
        (slStringLiteralExpr
          (slStringLiteralPart)))
      (intLiteralExpr))))