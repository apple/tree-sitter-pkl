===
listings2/typeCheck.pkl
===

import "pkl:test"

hidden x1: Listing<String> = new {
  when (false) { 0 }
  "pigeon"
  42
  "barn owl"
}

hidden x2: Listing<String(length > 3)> = new {
  when (false) { 0 }
  "pigeon"
  "bob"
}

hidden x3: Listing<String>(!isEmpty)

res1 = test.catch(() -> x1.toList())
res2 = test.catch(() -> x2.toList())
res3 = test.catch(() -> x3.toList())

hidden x4: Listing = new {
  when (true) {
    throw("element unnecessarily evaluated")
  }
  for (n in List(1)) {
    throw("element unnecessarily evaluated")
  }
}

hidden x5: Listing<Any> = new {
  when (true) {
    throw("element unnecessarily evaluated")
  }
  for (n in List(1)) {
    throw("element unnecessarily evaluated")
  }
}

hidden x6: Listing<unknown> = new {
  when (true) {
    throw("element unnecessarily evaluated")
  }
  for (n in List(1)) {
    throw("element unnecessarily evaluated")
  }
}

hidden x7 = new Listing {
  when (true) {
    throw("element unnecessarily evaluated")
  }
  42
  for (n in List(1)) {
    throw("element unnecessarily evaluated")
  }
}

res4 = x4.length == 2
res5 = x5.length == 2
res6 = x6.length == 2
res7 = x7[1] == 42

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectElement
              (intLiteralExpr))))
        (objectElement
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectElement
          (intLiteralExpr))
        (objectElement
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (constrainedType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (comparisonExpr
              (unqualifiedAccessExpr
                (identifier))
              (intLiteralExpr))))))
    (newExpr
      (objectBody
        (whenGenerator
          (falseLiteralExpr)
          (objectBody
            (objectElement
              (intLiteralExpr))))
        (objectElement
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectElement
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (constrainedType
        (declaredType
          (qualifiedIdentifier
            (identifier))
          (typeArgumentList
            (declaredType
              (qualifiedIdentifier
                (identifier)))))
        (logicalNotExpr
          (unqualifiedAccessExpr
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier))
            (identifier)
            (argumentList))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier))
            (identifier)
            (argumentList))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier))
            (identifier)
            (argumentList))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (unknownType))))
    (newExpr
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (modifier)
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (whenGenerator
          (trueLiteralExpr)
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart))))))
        (objectElement
          (intLiteralExpr))
        (forGenerator
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (throwExpr
                (slStringLiteralExpr
                  (slStringLiteralPart)))))))))
  (classProperty
    (identifier)
    (equalityExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (equalityExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (equalityExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (equalityExpr
      (subscriptExpr
        (unqualifiedAccessExpr
          (identifier))
        (intLiteralExpr))
      (intLiteralExpr))))