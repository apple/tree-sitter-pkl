===
errors/anyConverterError.pkl
===

class Dog {
  age: Int
}

output {
  renderer = new PcfRenderer {
    converters {
      [Any] = (o) -> o.getClass().toString()
    }
  }
}

---

(module
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (newExpr
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (objectBody
            (objectProperty
              (identifier)
              (objectBody
                (objectEntry
                  (unqualifiedAccessExpr
                    (identifier))
                  (functionLiteralExpr
                    (parameterList
                      (typedIdentifier
                        (identifier)))
                    (qualifiedAccessExpr
                      (qualifiedAccessExpr
                        (unqualifiedAccessExpr
                          (identifier))
                        (identifier)
                        (argumentList))
                      (identifier)
                      (argumentList))))))))))))