===
mappings/default.pkl
===

class Person {
  name: String
  age: Int
}

res1: Mapping<String, Person> = new {
  default {
    age = 42
  }
  ["pigeon"] {
    name = "Pigeon"
  }
  ["parrot"] {
    name = "Parrot"
    age = 50
  }
}

res2 = (res1) {
  default {
    age = 45
  }
}

res3: Mapping<String, Person> = new {
  default { key ->
    name = key
  }
  ["pigeon"] {
    age = 40
  }
  ["parrot"] {
    name = "PARROT"
    age = 50
  }
  ["susan"] {
    name = super.name + "!!!"
    age = 60
  }
}

---

(module
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))))
  (classProperty
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (objectProperty
          (identifier)
          (objectBody
            (objectProperty
              (identifier)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (objectBody
            (objectProperty
              (identifier)
              (slStringLiteralExpr
                (slStringLiteralPart)))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (objectBody
            (objectProperty
              (identifier)
              (slStringLiteralExpr
                (slStringLiteralPart)))
            (objectProperty
              (identifier)
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (amendExpr
      (parenthesizedExpr
        (unqualifiedAccessExpr
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (objectBody
            (objectProperty
              (identifier)
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (declaredType
            (qualifiedIdentifier
              (identifier))))))
    (newExpr
      (objectBody
        (objectProperty
          (identifier)
          (objectBody
            (objectBodyParameters

              (typedIdentifier
                (identifier)))
            (objectProperty
              (identifier)
              (unqualifiedAccessExpr
                (identifier)))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (objectBody
            (objectProperty
              (identifier)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (objectBody
            (objectProperty
              (identifier)
              (slStringLiteralExpr
                (slStringLiteralPart)))
            (objectProperty
              (identifier)
              (intLiteralExpr))))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (objectBody
            (objectProperty
              (identifier)
              (additiveExpr
                (superAccessExpr
                  (identifier))
                (slStringLiteralExpr
                  (slStringLiteralPart))))
            (objectProperty
              (identifier)
              (intLiteralExpr))))))))