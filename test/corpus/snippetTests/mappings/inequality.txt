===
mappings/inequality.pkl
===

local x = new Mapping {
  ["one"] = 1
  ["two"] = 2
}

res1 = x != x
res2 = x != new Mapping {
  ["one"] = 1
  ["two"] = 2
}
res3 = x != new Mapping {
  ["two"] = 2
}
res4 = x != new Mapping {
  ["one"] = 1
  ["two"] = 3
}
res5 = x != (x) {}
res6 = x != (x) { ["one"] = 1 }
res7 = x != (x) { ["one"] = 2 }
res8 = x != (x) { default = 9 }
res9 = (x) { default = 9 } != (x) { default = 10 }
res10 = new Mapping { ["one"] = 1 } != new Mapping { ["one"] = 1; default = 1 }

---

(module
  (classProperty
    (modifier)
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (intLiteralExpr))
        (objectEntry
          (slStringLiteralExpr
            (slStringLiteralPart))
          (intLiteralExpr)))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (newExpr
        (declaredType
          (qualifiedIdentifier
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (newExpr
        (declaredType
          (qualifiedIdentifier
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (newExpr
        (declaredType
          (qualifiedIdentifier
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody
          (objectProperty
            (identifier)
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody
          (objectProperty
            (identifier)
            (intLiteralExpr))))
      (amendExpr
        (parenthesizedExpr
          (unqualifiedAccessExpr
            (identifier)))
        (objectBody
          (objectProperty
            (identifier)
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (equalityExpr
      (newExpr
        (declaredType
          (qualifiedIdentifier
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))
      (newExpr
        (declaredType
          (qualifiedIdentifier
            (identifier)))
        (objectBody
          (objectEntry
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))
          (objectProperty
            (identifier)
            (intLiteralExpr)))))))