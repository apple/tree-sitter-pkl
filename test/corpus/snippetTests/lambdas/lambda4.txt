===
lambdas/lambda4.pkl
===

n = 999
n2 = 999

res1 = List(1, 2, 3).flatMap((n) ->
  List(4, 5, 6).map((n2) -> n2 * n)
)

res2 = List(1, 2, 3).flatMap((n) ->
  List(4, 5, 6).map((n) -> n * n)
)

res3 = List(1, 2, 3).flatMap((n) ->
  List(4, 5, 6).map((n2) -> n2 * n) + List(4, 5, 6).map((n2) -> n2 * n)
)


---

(module
  (classProperty
    (identifier)
    (intLiteralExpr))
  (classProperty
    (identifier)
    (intLiteralExpr))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier)
        (argumentList
          (intLiteralExpr)
          (intLiteralExpr)
          (intLiteralExpr)))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList
            (typedIdentifier
              (identifier)))
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)
                (intLiteralExpr)
                (intLiteralExpr)))
            (identifier)
            (argumentList
              (functionLiteralExpr
                (parameterList
                  (typedIdentifier
                    (identifier)))
                (multiplicativeExpr
                  (unqualifiedAccessExpr
                    (identifier))
                  (unqualifiedAccessExpr
                    (identifier))))))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier)
        (argumentList
          (intLiteralExpr)
          (intLiteralExpr)
          (intLiteralExpr)))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList
            (typedIdentifier
              (identifier)))
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier)
              (argumentList
                (intLiteralExpr)
                (intLiteralExpr)
                (intLiteralExpr)))
            (identifier)
            (argumentList
              (functionLiteralExpr
                (parameterList
                  (typedIdentifier
                    (identifier)))
                (multiplicativeExpr
                  (unqualifiedAccessExpr
                    (identifier))
                  (unqualifiedAccessExpr
                    (identifier))))))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier)
        (argumentList
          (intLiteralExpr)
          (intLiteralExpr)
          (intLiteralExpr)))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList
            (typedIdentifier
              (identifier)))
          (additiveExpr
            (qualifiedAccessExpr
              (unqualifiedAccessExpr
                (identifier)
                (argumentList
                  (intLiteralExpr)
                  (intLiteralExpr)
                  (intLiteralExpr)))
              (identifier)
              (argumentList
                (functionLiteralExpr
                  (parameterList
                    (typedIdentifier
                      (identifier)))
                  (multiplicativeExpr
                    (unqualifiedAccessExpr
                      (identifier))
                    (unqualifiedAccessExpr
                      (identifier))))))
            (qualifiedAccessExpr
              (unqualifiedAccessExpr
                (identifier)
                (argumentList
                  (intLiteralExpr)
                  (intLiteralExpr)
                  (intLiteralExpr)))
              (identifier)
              (argumentList
                (functionLiteralExpr
                  (parameterList
                    (typedIdentifier
                      (identifier)))
                  (multiplicativeExpr
                    (unqualifiedAccessExpr
                      (identifier))
                    (unqualifiedAccessExpr
                      (identifier))))))))))))