===
lambdas/pipeOperator.pkl
===

import "pkl:test"

local add1 = (x) -> x + 1
local mul2 = (x) -> x * 2
local higher1 = (x) -> (y) -> (y |> x) + 1

res1 = 42 |> add1
res2 = 42 |> add1 |> add1
res3 = 42 |> add1 |> mul2

res4 = -1.abs |> add1
res5 = 1 + 2 + 3 |> add1
res6 = 42 ?? 21 |> add1
res7 = 21 |> add1 ?? 42

res8 = 42.abs |> higher1.apply(add1)
res9 = 42.abs |> (add1 |> higher1)

class Person {}

res10 = test.catch(() -> 42 |> 21)
res11 = test.catch(() -> 42 |> new Person {})

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (identifier)
    (functionLiteralExpr
      (parameterList
        (typedIdentifier
          (identifier)))
      (additiveExpr
        (unqualifiedAccessExpr
          (identifier))
        (intLiteralExpr))))
  (classProperty
    (modifier)
    (identifier)
    (functionLiteralExpr
      (parameterList
        (typedIdentifier
          (identifier)))
      (multiplicativeExpr
        (unqualifiedAccessExpr
          (identifier))
        (intLiteralExpr))))
  (classProperty
    (modifier)
    (identifier)
    (functionLiteralExpr
      (parameterList
        (typedIdentifier
          (identifier)))
      (functionLiteralExpr
        (parameterList
          (typedIdentifier
            (identifier)))
        (additiveExpr
          (parenthesizedExpr
            (pipeExpr
              (unqualifiedAccessExpr
                (identifier))
              (unqualifiedAccessExpr
                (identifier))))
          (intLiteralExpr)))))
  (classProperty
    (identifier)
    (pipeExpr
      (intLiteralExpr)
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (pipeExpr
      (pipeExpr
        (intLiteralExpr)
        (unqualifiedAccessExpr
          (identifier)))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (pipeExpr
      (pipeExpr
        (intLiteralExpr)
        (unqualifiedAccessExpr
          (identifier)))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (pipeExpr
      (unaryMinusExpr
        (qualifiedAccessExpr
          (intLiteralExpr)
          (identifier)))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (pipeExpr
      (additiveExpr
        (additiveExpr
          (intLiteralExpr)
          (intLiteralExpr))
        (intLiteralExpr))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (nullCoalesceExpr
      (intLiteralExpr)
      (pipeExpr
        (intLiteralExpr)
        (unqualifiedAccessExpr
          (identifier)))))
  (classProperty
    (identifier)
    (nullCoalesceExpr
      (pipeExpr
        (intLiteralExpr)
        (unqualifiedAccessExpr
          (identifier)))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (pipeExpr
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier))
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier)
        (argumentList
          (unqualifiedAccessExpr
            (identifier))))))
  (classProperty
    (identifier)
    (pipeExpr
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier))
      (parenthesizedExpr
        (pipeExpr
          (unqualifiedAccessExpr
            (identifier))
          (unqualifiedAccessExpr
            (identifier))))))
  (clazz
    (identifier)
    (classBody))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (pipeExpr
            (intLiteralExpr)
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (pipeExpr
            (intLiteralExpr)
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))))))))