===
classes/inheritance1.pkl
===

abstract class Person {
  name: String
}

class Teacher extends Person {
  subjects: List<String>
}

res1 = new Teacher {
  name = "Pigeon"
  subjects = List("Rocks", "Stone Age")
}

res2 = (res1) {
  name = "Parrot"
}

res3 = (res2) {
  subjects = List("Fire Making")
}

---

(module
  (clazz
    (modifier)
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))))
  (clazz
    (identifier)      (classExtendsClause
      (qualifiedIdentifier
        (identifier)))
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (declaredType
                (qualifiedIdentifier
                  (identifier)))))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectProperty
          (identifier)
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (slStringLiteralExpr
                (slStringLiteralPart))))))))
  (classProperty
    (identifier)
    (amendExpr
      (parenthesizedExpr
        (unqualifiedAccessExpr
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (identifier)
    (amendExpr
      (parenthesizedExpr
        (unqualifiedAccessExpr
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart)))))))))