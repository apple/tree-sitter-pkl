===
classes/constraints4.pkl
===

import "pkl:test"

class Gauge {
  min: Int
  max: Int(this >= min)
}

res1 = new Gauge {
  min = 4
  max = 6
}

res2 = test.catch(() ->
  new Gauge {
    min = 4
    max = 3
  }.max
)



---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))
      (classProperty
        (identifier)
        (typeAnnotation
          (constrainedType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (comparisonExpr
              (thisExpr)
              (unqualifiedAccessExpr
                (identifier))))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (intLiteralExpr))
        (objectProperty
          (identifier)
          (intLiteralExpr)))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody
                (objectProperty
                  (identifier)
                  (intLiteralExpr))
                (objectProperty
                  (identifier)
                  (intLiteralExpr))))
            (identifier)))))))