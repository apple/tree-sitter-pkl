===
classes/constraints13.pkl
===

import "pkl:test"

const local isOddLengthOfBirds = (it: Listing<Bird>) -> it.length.isOdd

class Bird

class MyTest {
  birds: Listing(isOddLengthOfBirds) = new {
    1
    2
    3
  }
}

res = test.catch(() -> new MyTest {}.birds)

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (modifier)
    (identifier)
    (functionLiteralExpr
      (parameterList
        (typedIdentifier
          (identifier)
          (typeAnnotation
            (declaredType
              (qualifiedIdentifier
                (identifier))
              (typeArgumentList
                (declaredType
                  (qualifiedIdentifier
                    (identifier))))))))
      (qualifiedAccessExpr
        (qualifiedAccessExpr
          (unqualifiedAccessExpr
            (identifier))
          (identifier))
        (identifier))))
  (clazz
    (identifier))
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (constrainedType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (unqualifiedAccessExpr
              (identifier))))
        (newExpr
          (objectBody
            (objectElement
              (intLiteralExpr))
            (objectElement
              (intLiteralExpr))
            (objectElement
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))
            (identifier)))))))