===
classes/equality.pkl
===

res1 = Int == Int
res2 = Int == Float
res3 = Int == 3.getClass()
res4 = 3.getClass() == 4.getClass()
res5 = Person == Person
res6 = Person == Person2

res7 = Int != Int
res8 = Int != Float
res9 = Int != 3.getClass()
res10 = 3.getClass() != 4.getClass()
res11 = Person != Person
res12 = Person != Person2

class Person
class Person2
---

(module
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))))
  (classProperty
    (identifier)
    (equalityExpr
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))))
  (classProperty
    (identifier)
    (equalityExpr
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))
      (qualifiedAccessExpr
        (intLiteralExpr)
        (identifier)
        (argumentList))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (classProperty
    (identifier)
    (equalityExpr
      (unqualifiedAccessExpr
        (identifier))
      (unqualifiedAccessExpr
        (identifier))))
  (clazz
    (identifier))
  (clazz
    (identifier)))