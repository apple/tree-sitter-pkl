===
api/reflect3.pkl
===

/// Module doc comment line 1
/// Module doc comment line 2
module api.reflect

amends ".../snippetTest.pkl"

import "pkl:reflect"
import ".../input-helper/api/reflect/BaseModule.pkl"
import ".../input-helper/api/reflect/amendingModule.pkl"
import ".../input-helper/api/reflect/testHelpers.pkl"

local mod = reflect.Module(amendingModule)

facts {
  ["Reflecting an amended module"] {
    mod.reflectee == amendingModule
    mod.annotations == testHelpers.MyAnn("amending module annotation")
    mod.docComment == "amending module doc comment"
    mod.uri.matches(Regex(#"file:///.*/input-helper/api/reflect/amendingModule.pkl"#))
    mod.supermodule == reflect.Module(BaseModule)
    mod.isAmend
    mod.classes.keys == Set()
    mod.typeAliases.keys == Set()
    mod.moduleClass.reflectee == BaseModule.getClass()
    reflect.Module(module) == reflect.moduleOf((module) { facts { ["Can amend"] {} } })
  }
}

---

(module
  (moduleHeader
    (docComment)
    (moduleClause

      (qualifiedIdentifier
        (identifier)
        (identifier)))
      (extendsOrAmendsClause
      (stringConstant
        (slStringLiteralPart))))
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (unqualifiedAccessExpr
          (identifier)))))
  (classProperty
    (identifier)
    (objectBody
      (objectEntry
        (slStringLiteralExpr
          (slStringLiteralPart))
        (objectBody
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier))
              (unqualifiedAccessExpr
                (identifier))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier))
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier)
                (argumentList
                  (slStringLiteralExpr
                    (slStringLiteralPart))))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier))
              (slStringLiteralExpr
                (slStringLiteralPart))))
          (objectElement
            (qualifiedAccessExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier))
              (identifier)
              (argumentList
                (unqualifiedAccessExpr
                  (identifier)
                  (argumentList
                    (slStringLiteralExpr
                      (slStringLiteralPart)))))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier))
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier)
                (argumentList
                  (unqualifiedAccessExpr
                    (identifier))))))
          (objectElement
            (qualifiedAccessExpr
              (unqualifiedAccessExpr
                (identifier))
              (identifier)))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (qualifiedAccessExpr
                  (unqualifiedAccessExpr
                    (identifier))
                  (identifier))
                (identifier))
              (unqualifiedAccessExpr
                (identifier)
                (argumentList))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (qualifiedAccessExpr
                  (unqualifiedAccessExpr
                    (identifier))
                  (identifier))
                (identifier))
              (unqualifiedAccessExpr
                (identifier)
                (argumentList))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (qualifiedAccessExpr
                  (unqualifiedAccessExpr
                    (identifier))
                  (identifier))
                (identifier))
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier)
                (argumentList))))
          (objectElement
            (equalityExpr
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier)
                (argumentList
                  (moduleExpr)))
              (qualifiedAccessExpr
                (unqualifiedAccessExpr
                  (identifier))
                (identifier)
                (argumentList
                  (amendExpr
                    (parenthesizedExpr
                      (moduleExpr))
                    (objectBody
                      (objectProperty
                        (identifier)
                        (objectBody
                          (objectEntry
                            (slStringLiteralExpr
                              (slStringLiteralPart))
                            (objectBody)))))))))))))))