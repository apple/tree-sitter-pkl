===
api/yamlRenderer8.yml.pkl
===

mappingInt = new Mapping {
  [5] = "abc"
  [10] = "def"
  [20] = "ghi"
}

mapInt = mappingInt.toMap()

mappingFloat = new Mapping {
  [5.0] = "abc"
  [10.5] = "def"
  [20.999999990] = "ghi"
}

mapFloat = mappingFloat.toMap()

mappingBool = new Mapping {
  [true] = "abc"
  [false] = "def"
}

mapBool = mappingBool.toMap()

mappingNull = new Mapping {
  [null] = "abc"
}

mapNull = mappingNull.toMap()

output {
  renderer = new YamlRenderer {}
}

---

(module
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectEntry
          (intLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (intLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (intLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList)))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectEntry
          (floatLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (floatLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (floatLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList)))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectEntry
          (trueLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart)))
        (objectEntry
          (falseLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList)))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectEntry
          (nullLiteralExpr)
          (slStringLiteralExpr
            (slStringLiteralPart))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList)))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (newExpr
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (objectBody))))))