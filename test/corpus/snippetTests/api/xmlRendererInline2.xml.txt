================================================================================
api/xmlRendererInline2.xml
================================================================================

import "pkl:xml"

order {
  items {
    new { name = "banana"; quantity = 42 }
    new { name = "orange"; quantity = 21 }
  }
}

output {
  renderer = new xml.Renderer {
    converters {
      ["order.items"] = (it) -> xml.Inline(it) // remove `items` (repeated element)
      ["order.items[*]"] = (it) -> (xml.Element("item")) { xml.Inline(it) } // element + inline = rename
    }
  }
}

--------------------------------------------------------------------------------

(module
  (importClause
    (stringConstant
      (stringFragment)))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (objectBody
          (objectElement
            (newExpr
              (objectBody
                (objectProperty
                  (identifier)
                  (slStringLiteral
                    (stringFragment)))
                (objectProperty
                  (identifier)
                  (intLiteral)))))
          (objectElement
            (newExpr
              (objectBody
                (objectProperty
                  (identifier)
                  (slStringLiteral
                    (stringFragment)))
                (objectProperty
                  (identifier)
                  (intLiteral)))))))))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (newExpr
          (type
            (qualifiedIdentifier
              (identifier)
              (identifier)))
          (objectBody
            (objectProperty
              (identifier)
              (objectBody
                (objectEntry
                  (slStringLiteral
                    (stringFragment))
                  (functionLiteral
                    (parameterList
                      (typedIdentifier
                        (identifier)))
                    (methodCallExpr
                      (variableExpr
                        (identifier))
                      (identifier)
                      (argumentList
                        (variableExpr
                          (identifier))))))
                (lineComment)
                (objectEntry
                  (slStringLiteral
                    (stringFragment))
                  (functionLiteral
                    (parameterList
                      (typedIdentifier
                        (identifier)))
                    (objectLiteral
                      (parenthesizedExpr
                        (methodCallExpr
                          (variableExpr
                            (identifier))
                          (identifier)
                          (argumentList
                            (slStringLiteral
                              (stringFragment)))))
                      (objectBody
                        (objectElement
                          (methodCallExpr
                            (variableExpr
                              (identifier))
                            (identifier)
                            (argumentList
                              (variableExpr
                                (identifier)))))))))
                (lineComment)))))))))
