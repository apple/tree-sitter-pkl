===
basic/underscore.pkl
===

local lambda = (_, _, _) -> 3

l1 = lambda.apply(1, 2, "")

function fun(_, x: Int, _) = x + 10

f1 = fun("foo", 1, "foo")

foo = new Dynamic {
  for (_, _ in Map("a", 1, "b", 2)) {
    0
  }
}

foo2 = new Dynamic {
  for (_ in Map("a", 1, "b", 2)) {
    0
  }
}

bar = new Dynamic {
  for (_, v in Map("a", 1, "b", 2)) {
    for (k, _ in Map("a", 1, "b", 2)) {
      ["\(k)\(v)"] = v
    }
  }
}

baz = new Dynamic {
  for (k1, _ in Map("a", 1, "b", 2)) {
    for (k2, _ in Map("a", 1, "b", 2)) {
      ["\(k1)\(k2)"] = k1
    }
  }
}

qux = new Dynamic {
  for (_, v1 in Map("a", 1, "b", 2)) {
    for (_, v2 in Map("a", 1, "b", 2)) {
      ["\(v1)\(v2)"] = v1 + v2
    }
  }
}

class Bird {
  name: String
  age: Int
}

class B {
  hidden mkBird: (String, Int) -> Bird = (_name, _age) -> new Bird {
    name = _name
    age = _age
  }
  bird = mkBird.apply("Robin", 2)
}

bird1 = new B {
  mkBird { _, _age ->
    name = "Swallow"
    age = _age
  }
}

bird2 = new B {
  mkBird { _name, _ ->
    name = _name
    age = 3
  }
}

var = let (_ = "foo") 0

---

(module
  (classProperty
    (modifier)
    (identifier)
    (functionLiteralExpr
      (parameterList
        (blankIdentifier)
        (blankIdentifier)
        (blankIdentifier))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (intLiteralExpr)
        (intLiteralExpr)
        (slStringLiteralExpr))))
  (classMethod
    (methodHeader
      (identifier)
      (parameterList
        (blankIdentifier)
        (typedIdentifier
          (identifier)
          (typeAnnotation
            (declaredType
              (qualifiedIdentifier
                (identifier)))))
        (blankIdentifier)))
    (additiveExpr
      (unqualifiedAccessExpr
        (identifier))
      (intLiteralExpr)))
  (classProperty
    (identifier)
    (unqualifiedAccessExpr
      (identifier)
      (argumentList
        (slStringLiteralExpr
          (slStringLiteralPart))
        (intLiteralExpr)
        (slStringLiteralExpr
          (slStringLiteralPart)))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (forGenerator
          (blankIdentifier)
          (blankIdentifier)
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (forGenerator
          (blankIdentifier)
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)))
          (objectBody
            (objectElement
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (forGenerator
          (blankIdentifier)
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)))
          (objectBody
            (forGenerator
              (typedIdentifier
                (identifier))
              (blankIdentifier)
              (unqualifiedAccessExpr
                (identifier)
                (argumentList
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)))
              (objectBody
                (objectEntry
                  (slStringLiteralExpr
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier)))
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier))))
                  (unqualifiedAccessExpr
                    (identifier))))))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (forGenerator
          (typedIdentifier
            (identifier))
          (blankIdentifier)
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)))
          (objectBody
            (forGenerator
              (typedIdentifier
                (identifier))
              (blankIdentifier)
              (unqualifiedAccessExpr
                (identifier)
                (argumentList
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)))
              (objectBody
                (objectEntry
                  (slStringLiteralExpr
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier)))
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier))))
                  (unqualifiedAccessExpr
                    (identifier))))))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (forGenerator
          (blankIdentifier)
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier)
            (argumentList
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)
              (slStringLiteralExpr
                (slStringLiteralPart))
              (intLiteralExpr)))
          (objectBody
            (forGenerator
              (blankIdentifier)
              (typedIdentifier
                (identifier))
              (unqualifiedAccessExpr
                (identifier)
                (argumentList
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)
                  (slStringLiteralExpr
                    (slStringLiteralPart))
                  (intLiteralExpr)))
              (objectBody
                (objectEntry
                  (slStringLiteralExpr
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier)))
                    (stringInterpolation
                      (unqualifiedAccessExpr
                        (identifier))))
                  (additiveExpr
                    (unqualifiedAccessExpr
                      (identifier))
                    (unqualifiedAccessExpr
                      (identifier)))))))))))
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier)))))))
  (clazz
    (identifier)
    (classBody
      (classProperty
        (modifier)
        (identifier)
        (typeAnnotation
          (functionLiteralType
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (declaredType
              (qualifiedIdentifier
                (identifier)))))
        (functionLiteralExpr
          (parameterList
            (typedIdentifier
              (identifier))
            (typedIdentifier
              (identifier)))
          (newExpr
            (declaredType
              (qualifiedIdentifier
                (identifier)))
            (objectBody
              (objectProperty
                (identifier)
                (unqualifiedAccessExpr
                  (identifier)))
              (objectProperty
                (identifier)
                (unqualifiedAccessExpr
                  (identifier)))))))
      (classProperty
        (identifier)
        (qualifiedAccessExpr
          (unqualifiedAccessExpr
            (identifier))
          (identifier)
          (argumentList
            (slStringLiteralExpr
              (slStringLiteralPart))
            (intLiteralExpr))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (objectBody
            (objectBodyParameters

              (blankIdentifier)
              (typedIdentifier
                (identifier)))
            (objectProperty
              (identifier)
              (slStringLiteralExpr
                (slStringLiteralPart)))
            (objectProperty
              (identifier)
              (unqualifiedAccessExpr
                (identifier))))))))
  (classProperty
    (identifier)
    (newExpr
      (declaredType
        (qualifiedIdentifier
          (identifier)))
      (objectBody
        (objectProperty
          (identifier)
          (objectBody
            (objectBodyParameters

              (typedIdentifier
                (identifier))
              (blankIdentifier))
            (objectProperty
              (identifier)
              (unqualifiedAccessExpr
                (identifier)))
            (objectProperty
              (identifier)
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (letExpr
      (blankIdentifier)
      (slStringLiteralExpr
        (slStringLiteralPart))
      (intLiteralExpr))))