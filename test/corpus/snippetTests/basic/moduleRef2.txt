===
basic/moduleRef2.pkl
===

amends "moduleRefLibrary.pkl"

foo {
  m1 = module.a
  b = 43
  m2 = module.foo.b
  local c = () -> module.a
  m3 = c.apply()
  m4 = new Person {}
}

local class Person {
  age: Int = module.a
}


---

(module
  (moduleHeader
      (extendsOrAmendsClause
      (stringConstant
        (slStringLiteralPart))))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (qualifiedAccessExpr
          (moduleExpr)
          (identifier)))
      (objectProperty
        (identifier)
        (intLiteralExpr))
      (objectProperty
        (identifier)
        (qualifiedAccessExpr
          (qualifiedAccessExpr
            (moduleExpr)
            (identifier))
          (identifier)))
      (objectProperty
        (modifier)
        (identifier)
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (moduleExpr)
            (identifier))))
      (objectProperty
        (identifier)
        (qualifiedAccessExpr
          (unqualifiedAccessExpr
            (identifier))
          (identifier)
          (argumentList)))
      (objectProperty
        (identifier)
        (newExpr
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (objectBody)))))
  (clazz
    (modifier)
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier))))
        (qualifiedAccessExpr
          (moduleExpr)
          (identifier))))))