==========
basic/as3
==========

amends "../snippetTest.pkl"

examples {
  ["set of listing"] {
    local s1 = Set(
      new Listing { 1; 2; 3 }
    ) as Set<Listing<Int>>
    local s2 = Set(
      new Listing { "one"; "two"; "three" }
    ) as Set<Listing<Int>>
    s1.first[0]
    module.catchOrNull(() -> s2.first) == null
    module.catch(() -> s2.first[0])
  }
  ["listing"] {
    local l = new Listing { 1; 2; 3 } as Listing<String>
    module.catchOrNull(() -> l) == null
    module.catch(() -> l[0])
  }
  ["mapping"] {
    local m1 = new Mapping {
      ["hi"] = 1
      ["bye"] = 2
    } as Mapping<String, String>
    module.catchOrNull(() -> m1) == null
    module.catch(() -> m1["hi"])
    module.catch(() -> m1["bye"])
    local m2 = new Mapping {
      ["hi"] = 1
      ["bye"] = 2
    } as Mapping<Int, Int>
    module.catch(() -> m2)
  }
}

---

(module
  (moduleHeader
    (extendsOrAmendsClause
      (stringConstant
        (slStringLiteralPart))))
  (classProperty
    (identifier)
    (objectBody
      (objectEntry
        (slStringLiteral
          (slStringLiteralPart))
        (objectBody
          (objectProperty
            (modifier)
            (identifier)
            (asExpr
              (methodCallExpr
                (identifier)
                (argumentList
                  (newExpr
                    (type
                      (qualifiedIdentifier
                        (identifier)))
                    (objectBody
                      (objectElement
                        (intLiteral))
                      (objectElement
                        (intLiteral))
                      (objectElement
                        (intLiteral))))))
              (type
                (qualifiedIdentifier
                  (identifier))
                (typeArgumentList
                  (type
                    (qualifiedIdentifier
                      (identifier))
                    (typeArgumentList
                      (type
                        (qualifiedIdentifier
                          (identifier)))))))))
          (objectProperty
            (modifier)
            (identifier)
            (asExpr
              (methodCallExpr
                (identifier)
                (argumentList
                  (newExpr
                    (type
                      (qualifiedIdentifier
                        (identifier)))
                    (objectBody
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart)))
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart)))
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart)))))))
              (type
                (qualifiedIdentifier
                  (identifier))
                (typeArgumentList
                  (type
                    (qualifiedIdentifier
                      (identifier))
                    (typeArgumentList
                      (type
                        (qualifiedIdentifier
                          (identifier)))))))))
          (objectElement
            (subscriptExpr
              (propertyCallExpr
                (variableExpr
                  (identifier))
                (identifier))
              (intLiteral)))
          (objectElement
            (binaryExpr
              (methodCallExpr
                (moduleExpr)
                (identifier)
                (argumentList
                  (functionLiteral
                    (parameterList)
                    (propertyCallExpr
                      (variableExpr
                        (identifier))
                      (identifier)))))
              (nullLiteral)))
          (objectElement
            (methodCallExpr
              (moduleExpr)
              (identifier)
              (argumentList
                (functionLiteral
                  (parameterList)
                  (subscriptExpr
                    (propertyCallExpr
                      (variableExpr
                        (identifier))
                      (identifier))
                    (intLiteral))))))))
      (objectEntry
        (slStringLiteral
          (slStringLiteralPart))
        (objectBody
          (objectProperty
            (modifier)
            (identifier)
            (binaryExpr
              (methodCallExpr
                (binaryExpr
                  (binaryExpr
                    (asExpr
                      (newExpr
                        (type
                          (qualifiedIdentifier
                            (identifier)))
                        (objectBody
                          (objectElement
                            (intLiteral))
                          (objectElement
                            (intLiteral))
                          (objectElement
                            (intLiteral))))
                      (type
                        (qualifiedIdentifier
                          (identifier))))
                    (variableExpr
                      (identifier)))
                  (moduleExpr))
                (identifier)
                (argumentList
                  (functionLiteral
                    (parameterList)
                    (variableExpr
                      (identifier)))))
              (nullLiteral)))
          (objectElement
            (methodCallExpr
              (moduleExpr)
              (identifier)
              (argumentList
                (functionLiteral
                  (parameterList)
                  (subscriptExpr
                    (variableExpr
                      (identifier))
                    (intLiteral))))))))
      (objectEntry
        (slStringLiteral
          (slStringLiteralPart))
        (objectBody
          (objectProperty
            (modifier)
            (identifier)
            (asExpr
              (newExpr
                (type
                  (qualifiedIdentifier
                    (identifier)))
                (objectBody
                  (objectEntry
                    (slStringLiteral
                      (slStringLiteralPart))
                    (intLiteral))
                  (objectEntry
                    (slStringLiteral
                      (slStringLiteralPart))
                    (intLiteral))))
              (type
                (qualifiedIdentifier
                  (identifier))
                (typeArgumentList
                  (type
                    (qualifiedIdentifier
                      (identifier)))
                  (type
                    (qualifiedIdentifier
                      (identifier)))))))
          (objectElement
            (binaryExpr
              (methodCallExpr
                (moduleExpr)
                (identifier)
                (argumentList
                  (functionLiteral
                    (parameterList)
                    (variableExpr
                      (identifier)))))
              (nullLiteral)))
          (objectElement
            (methodCallExpr
              (moduleExpr)
              (identifier)
              (argumentList
                (functionLiteral
                  (parameterList)
                  (subscriptExpr
                    (variableExpr
                      (identifier))
                    (slStringLiteral
                      (slStringLiteralPart)))))))
          (objectElement
            (methodCallExpr
              (moduleExpr)
              (identifier)
              (argumentList
                (functionLiteral
                  (parameterList)
                  (subscriptExpr
                    (variableExpr
                      (identifier))
                    (slStringLiteral
                      (slStringLiteralPart)))))))
          (objectProperty
            (modifier)
            (identifier)
            (asExpr
              (newExpr
                (type
                  (qualifiedIdentifier
                    (identifier)))
                (objectBody
                  (objectEntry
                    (slStringLiteral
                      (slStringLiteralPart))
                    (intLiteral))
                  (objectEntry
                    (slStringLiteral
                      (slStringLiteralPart))
                    (intLiteral))))
              (type
                (qualifiedIdentifier
                  (identifier))
                (typeArgumentList
                  (type
                    (qualifiedIdentifier
                      (identifier)))
                  (type
                    (qualifiedIdentifier
                      (identifier)))))))
          (objectElement
            (methodCallExpr
              (moduleExpr)
              (identifier)
              (argumentList
                (functionLiteral
                  (parameterList)
                  (variableExpr
                    (identifier)))))))))))
