===
basic/localProperty2.pkl
===

import "pkl:test"

foo {
  local x = 2
}

fooX = test.catch(() -> foo.x)

bar {
  local x = 3
  y = x
}

barY = bar.y

barX = test.catch(() -> bar.x)

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (modifier)
        (identifier)
        (intLiteralExpr))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier))
            (identifier))))))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (modifier)
        (identifier)
        (intLiteralExpr))
      (objectProperty
        (identifier)
        (unqualifiedAccessExpr
          (identifier)))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (unqualifiedAccessExpr
              (identifier))
            (identifier)))))))