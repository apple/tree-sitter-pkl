================================================================================
basic/identifier
================================================================================

amends "../snippetTest.pkl"

local `this` = 42 // keyword
local `that` = 43 // regular identifier
local `quick brown fox` = 44 // irregular identifier

local obj = new {
  `this` = 42
  `that` = 43
  `quick brown fox` = 44
}

examples {
  ["variable"] {
    `this`
    `that`
    `quick brown fox`
  }

  ["property"] {
    obj.`this`
    obj.`that`
    obj.`quick brown fox`
  }

  ["string interpolation"] {
    "\(`this`)"
    "\(`that`)"
    "\(`quick brown fox`)"
  }

  ["multiline string interpolation"] {
    """
    \(`this`)
    """
    """
    \(`that`)
    """
    """
    \(`quick brown fox`)
    """
  }
}

--------------------------------------------------------------------------------

(module
  (moduleHeader
    (extendsOrAmendsClause
      (stringConstant
        (stringFragment))))
  (classProperty
    (modifier)
    (identifier)
    (intLiteral))
  (lineComment)
  (classProperty
    (modifier)
    (identifier)
    (intLiteral))
  (lineComment)
  (classProperty
    (modifier)
    (identifier)
    (intLiteral))
  (lineComment)
  (classProperty
    (modifier)
    (identifier)
    (newExpr
      (objectBody
        (objectProperty
          (identifier)
          (intLiteral))
        (objectProperty
          (identifier)
          (intLiteral))
        (objectProperty
          (identifier)
          (intLiteral)))))
  (classProperty
    (identifier)
    (objectBody
      (objectEntry
        (slStringLiteral
          (stringFragment))
        (objectBody
          (objectElement
            (variableExpr
              (identifier)))
          (objectElement
            (variableExpr
              (identifier)))
          (objectElement
            (variableExpr
              (identifier)))))
      (objectEntry
        (slStringLiteral
          (stringFragment))
        (objectBody
          (objectElement
            (propertyCallExpr
              (variableExpr
                (identifier))
              (identifier)))
          (objectElement
            (propertyCallExpr
              (variableExpr
                (identifier))
              (identifier)))
          (objectElement
            (propertyCallExpr
              (variableExpr
                (identifier))
              (identifier)))))
      (objectEntry
        (slStringLiteral
          (stringFragment))
        (objectBody
          (objectElement
            (slStringLiteral
              (interpolationExpr
                (variableExpr
                  (identifier)))))
          (objectElement
            (slStringLiteral
              (interpolationExpr
                (variableExpr
                  (identifier)))))
          (objectElement
            (slStringLiteral
              (interpolationExpr
                (variableExpr
                  (identifier)))))))
      (objectEntry
        (slStringLiteral
          (stringFragment))
        (objectBody
          (objectElement
            (mlStringLiteral
              (stringFragment)
              (interpolationExpr
                (variableExpr
                  (identifier)))
              (stringFragment)))
          (objectElement
            (mlStringLiteral
              (stringFragment)
              (interpolationExpr
                (variableExpr
                  (identifier)))
              (stringFragment)))
          (objectElement
            (mlStringLiteral
              (stringFragment)
              (interpolationExpr
                (variableExpr
                  (identifier)))
              (stringFragment))))))))
