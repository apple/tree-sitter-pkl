===
types/currentModuleType1.pkl
===

import "pkl:test"

x: Int = 1

res1: module = module

res2: module = this

res3: module = (this) { x = 2 }

res4: module? = null

res5: List<module> = List(module, (module) { x = 2 })

res6: List<module> = fun(this)

res6a: module = res6[0]

function fun(m: module): List<module> = List((m) { x = 2 })

class Bad {
  res7: module = "abc"

  res8: module = new Person {}

  res9: module? = new Person {}

  res10: List<module> = List(new Person {})
}

class Person

res7 = test.catch(() -> new Bad {}.res7)

res8 = test.catch(() -> new Bad {}.res8)

res9 = test.catch(() -> new Bad {}.res9)

res10 = test.catch(() -> new Bad {}.res10)

output {
  value =
    let (r1 = res1)
      let (r2 = res2)
        let (r3 = res3)
          let (r4 = res4)
            let (r5 = res5)
              let (r6 = res6)
                let (r6a = res6a)
                  let (r7 = res7)
                    let (r8 = res8)
                      let (r9 = res9)
                        let (r10 = res10)
                          new Dynamic { result = "ok" }
}

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))))
    (intLiteralExpr))
  (classProperty
    (identifier)
    (typeAnnotation
      (moduleType))
    (moduleExpr))
  (classProperty
    (identifier)
    (typeAnnotation
      (moduleType))
    (thisExpr))
  (classProperty
    (identifier)
    (typeAnnotation
      (moduleType))
    (amendExpr
      (parenthesizedExpr
        (thisExpr))
      (objectBody
        (objectProperty
          (identifier)
          (intLiteralExpr)))))
  (classProperty
    (identifier)
    (typeAnnotation
      (nullableType
        (moduleType)))
    (nullLiteralExpr))
  (classProperty
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (moduleType))))
    (unqualifiedAccessExpr
      (identifier)
      (argumentList
        (moduleExpr)
        (amendExpr
          (parenthesizedExpr
            (moduleExpr))
          (objectBody
            (objectProperty
              (identifier)
              (intLiteralExpr)))))))
  (classProperty
    (identifier)
    (typeAnnotation
      (declaredType
        (qualifiedIdentifier
          (identifier))
        (typeArgumentList
          (moduleType))))
    (unqualifiedAccessExpr
      (identifier)
      (argumentList
        (thisExpr))))
  (classProperty
    (identifier)
    (typeAnnotation
      (moduleType))
    (subscriptExpr
      (unqualifiedAccessExpr
        (identifier))
      (intLiteralExpr)))
  (classMethod
    (methodHeader
      (identifier)
      (parameterList
        (typedIdentifier
          (identifier)
          (typeAnnotation
            (moduleType))))
      (typeAnnotation
        (declaredType
          (qualifiedIdentifier
            (identifier))
          (typeArgumentList
            (moduleType)))))
    (unqualifiedAccessExpr
      (identifier)
      (argumentList
        (amendExpr
          (parenthesizedExpr
            (unqualifiedAccessExpr
              (identifier)))
          (objectBody
            (objectProperty
              (identifier)
              (intLiteralExpr)))))))
  (clazz
    (identifier)
    (classBody
      (classProperty
        (identifier)
        (typeAnnotation
          (moduleType))
        (slStringLiteralExpr
          (slStringLiteralPart)))
      (classProperty
        (identifier)
        (typeAnnotation
          (moduleType))
        (newExpr
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (objectBody)))
      (classProperty
        (identifier)
        (typeAnnotation
          (nullableType
            (moduleType)))
        (newExpr
          (declaredType
            (qualifiedIdentifier
              (identifier)))
          (objectBody)))
      (classProperty
        (identifier)
        (typeAnnotation
          (declaredType
            (qualifiedIdentifier
              (identifier))
            (typeArgumentList
              (moduleType))))
        (unqualifiedAccessExpr
          (identifier)
          (argumentList
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody)))))))
  (clazz
    (identifier))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))
            (identifier))))))
  (classProperty
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList
        (functionLiteralExpr
          (parameterList)
          (qualifiedAccessExpr
            (newExpr
              (declaredType
                (qualifiedIdentifier
                  (identifier)))
              (objectBody))
            (identifier))))))
  (classProperty
    (identifier)
    (objectBody
      (objectProperty
        (identifier)
        (letExpr
          (typedIdentifier
            (identifier))
          (unqualifiedAccessExpr
            (identifier))
          (letExpr
            (typedIdentifier
              (identifier))
            (unqualifiedAccessExpr
              (identifier))
            (letExpr
              (typedIdentifier
                (identifier))
              (unqualifiedAccessExpr
                (identifier))
              (letExpr
                (typedIdentifier
                  (identifier))
                (unqualifiedAccessExpr
                  (identifier))
                (letExpr
                  (typedIdentifier
                    (identifier))
                  (unqualifiedAccessExpr
                    (identifier))
                  (letExpr
                    (typedIdentifier
                      (identifier))
                    (unqualifiedAccessExpr
                      (identifier))
                    (letExpr
                      (typedIdentifier
                        (identifier))
                      (unqualifiedAccessExpr
                        (identifier))
                      (letExpr
                        (typedIdentifier
                          (identifier))
                        (unqualifiedAccessExpr
                          (identifier))
                        (letExpr
                          (typedIdentifier
                            (identifier))
                          (unqualifiedAccessExpr
                            (identifier))
                          (letExpr
                            (typedIdentifier
                              (identifier))
                            (unqualifiedAccessExpr
                              (identifier))
                            (letExpr
                              (typedIdentifier
                                (identifier))
                              (unqualifiedAccessExpr
                                (identifier))
                              (newExpr
                                (declaredType
                                  (qualifiedIdentifier
                                    (identifier)))
                                (objectBody
                                  (objectProperty
                                    (identifier)
                                    (slStringLiteralExpr
                                      (slStringLiteralPart))))))))))))))))))))