===
types/modifiersForTypes.pkl
===

import "pkl:reflect"

class Foo {}

typealias Bar = Foo

const res1 = Foo.simpleName
const res2 = Bar.toString()
const res3 = reflect.Class(Foo).modifiers
const res4 = reflect.TypeAlias(Bar).modifiers

---

(module
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (clazz
    (identifier)
    (classBody))
  (typeAlias
    (identifier)
    (declaredType
      (qualifiedIdentifier
        (identifier))))
  (classProperty
    (modifier)
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)))
  (classProperty
    (modifier)
    (identifier)
    (qualifiedAccessExpr
      (unqualifiedAccessExpr
        (identifier))
      (identifier)
      (argumentList)))
  (classProperty
    (modifier)
    (identifier)
    (qualifiedAccessExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier)
        (argumentList
          (unqualifiedAccessExpr
            (identifier))))
      (identifier)))
  (classProperty
    (modifier)
    (identifier)
    (qualifiedAccessExpr
      (qualifiedAccessExpr
        (unqualifiedAccessExpr
          (identifier))
        (identifier)
        (argumentList
          (unqualifiedAccessExpr
            (identifier))))
      (identifier))))