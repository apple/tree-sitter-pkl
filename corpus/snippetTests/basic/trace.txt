================================================================================
basic/trace
================================================================================

amends "../snippetTest.pkl"

examples {
  ["trace different values"] {
    trace(1)
    trace(true)
    trace("Barn Owl")
    trace("""
      Bird
      Barn Owl
      """)
    trace(List(1, 2, 3))
    trace(Set(1, 2, 3))
    trace(Map(1, "one", 2, "two"))
    trace(new {
      name = "Barn Owl"
      age = 42
    })
    trace(new {
      "Parrot"
      "Barn Owl"
      "Pigeon"
    })
    trace(new {
      ["Parrot"] {
        name = "Parrot"
        age = 42
      }
    })
  }
}

--------------------------------------------------------------------------------

(module
  (moduleHeader
    (extendsOrAmendsClause
      (stringConstant
        (slStringLiteralPart))))
  (classProperty
    (identifier)
    (objectBody
      (objectEntry
        (slStringLiteral
          (slStringLiteralPart))
        (objectBody
          (objectElement
            (traceExpr
              (parenthesizedExpr
                (intLiteral))))
          (objectElement
            (traceExpr
              (parenthesizedExpr
                (trueLiteral))))
          (objectElement
            (traceExpr
              (parenthesizedExpr
                (slStringLiteral
                  (slStringLiteralPart)))))
          (ERROR
            (ERROR
              (identifier)
              (identifier)
              (identifier))
            (ERROR
              (parenthesizedExpr
                (methodCallExpr
                  (identifier)
                  (argumentList
                    (intLiteral)
                    (intLiteral)
                    (intLiteral))))
              (traceExpr
                (parenthesizedExpr
                  (methodCallExpr
                    (identifier)
                    (argumentList
                      (intLiteral)
                      (intLiteral)
                      (intLiteral)))))
              (traceExpr
                (parenthesizedExpr
                  (methodCallExpr
                    (identifier)
                    (argumentList
                      (intLiteral)
                      (slStringLiteral
                        (slStringLiteralPart))
                      (intLiteral)
                      (slStringLiteral
                        (slStringLiteralPart))))))
              (traceExpr
                (parenthesizedExpr
                  (newExpr
                    (objectBody
                      (objectProperty
                        (identifier)
                        (slStringLiteral
                          (slStringLiteralPart)))
                      (objectProperty
                        (identifier)
                        (intLiteral))))))
              (traceExpr
                (parenthesizedExpr
                  (newExpr
                    (objectBody
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart)))
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart)))
                      (objectElement
                        (slStringLiteral
                          (slStringLiteralPart))))))))
            (traceExpr
              (parenthesizedExpr
                (newExpr
                  (objectBody
                    (objectEntry
                      (slStringLiteral
                        (slStringLiteralPart))
                      (objectBody
                        (objectProperty
                          (identifier)
                          (slStringLiteral
                            (slStringLiteralPart)))
                        (objectProperty
                          (identifier)
                          (intLiteral))))))))))))))
