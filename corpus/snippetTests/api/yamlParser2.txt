================================================================================
api/yamlParser2
================================================================================

import "pkl:yaml"
import "pkl:test"

local parser = new yaml.Parser {}

res1 = parser.parse("""
  msg1: &one This is a message.
  msg2: *one
  """)

// merge keys were dropped in yaml 1.2; `<<` is now a normal key
res2 = parser.parse("""
  pigeon: &one
    name: pigeon
    age: 42
  pigeon2:
    <<: *one
    age: 21
  """)

res3 = parser.parse("""
  # comment
  name: pigeon
  # comment 2
  age: 42
  """)

res4 = parser.parse("""
  %YAML 1.2
  ---
  name: pigeon
  age: 42
  """)

res5 = parser.parse("""
  ---
  name: pigeon
  age: 42
  ...
  """)

res6 = parser.parse("")

res7 = test.catch(() -> parser.parse("""
  ---
  name: pigeon
  ---
  age: 42
  """))

/// "nothing"
res8 = parser.parseAll("")
res9 = parser.parseAll("   ")

// empty document
res10 = parser.parseAll("""
---
""")

// empty documents
res11 = parser.parseAll("""
---
---
---
""")

// empty document between non-empty documents
res12 = parser.parseAll("""
---
123
---
---
456
""")

res13 = parser.parseAll("""
  name: pigeon
  """)

res14 = parser.parseAll("""
  ---
  name: pigeon
  """)

res15 = parser.parseAll("""
  ---
  name: pigeon
  ---
  age: 42
  ---
  hobby: surfing
  ...
  """)

--------------------------------------------------------------------------------

(ERROR
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (importClause
    (stringConstant
      (slStringLiteralPart)))
  (classProperty
    (modifier)
    (identifier)
    (newExpr
      (type
        (qualifiedIdentifier
          (identifier)
          (identifier)))
      (objectBody)))
  (classProperty
    (identifier)
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (ERROR
          (identifier)
          (UNEXPECTED 'o')
          (identifier))
        (binaryExpr
          (isExpr
            (variableExpr
              (identifier))
            (ERROR
              (identifier))
            (type
              (qualifiedIdentifier
                (identifier)
                (identifier))))
          (ERROR)
          (variableExpr
            (identifier)))
        (ERROR))))
  (lineComment)
  (classProperty
    (identifier)
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (ERROR
          (identifier)
          (UNEXPECTED 'o')
          (identifier)
          (identifier))
        (variableExpr
          (identifier))
        (MISSING "))))
  (classProperty
    (identifier)
    (typeAnnotation
      (ERROR
        (intLiteral))
      (type
        (qualifiedIdentifier
          (identifier))
        (ERROR)
        (typeArgumentList
          (ERROR)
          (type
            (type
              (qualifiedIdentifier
                (identifier))))
          (MISSING ">")))))
  (classProperty
    (identifier)
    (typeAnnotation
      (ERROR
        (intLiteral))
      (type
        (qualifiedIdentifier
          (identifier))))
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (ERROR
          (UNEXPECTED ')
          (identifier)
          (identifier)
          (identifier)
          (UNEXPECTED ')
          (identifier)
          (intLiteral)
          (identifier))
        (intLiteral)
        (ERROR))))
  (classProperty
    (identifier)
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (binaryExpr
          (binaryExpr
            (mlStringLiteral
              (MISSING """""))
            (variableExpr
              (identifier)))
          (ERROR
            (floatLiteral))
          (unaryExpr
            (unaryExpr
              (ERROR
                (identifier)
                (identifier)
                (identifier))
              (intLiteral))))
        (ERROR))))
  (classProperty
    (identifier)
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (ERROR
          (unaryExpr
            (unaryExpr
              (unaryExpr
                (ERROR
                  (identifier)
                  (identifier)
                  (identifier))
                (intLiteral))))
          (identifier))
        (methodCallExpr
          (variableExpr
            (identifier))
          (identifier)
          (argumentList
            (slStringLiteral)))
        (MISSING "))))
  (identifier)
  (variableExpr
    (identifier))
  (identifier)
  (parameterList)
  (variableExpr
    (identifier))
  (identifier)
  (ERROR
    (methodCallExpr
      (binaryExpr
        (unaryExpr
          (unaryExpr
            (unaryExpr
              (ERROR
                (identifier))
              (variableExpr
                (identifier)))))
        (unaryExpr
          (unaryExpr
            (ERROR
              (identifier)
              (intLiteral)
              (identifier))
            (variableExpr
              (identifier)))))
      (identifier)
      (argumentList
        (slStringLiteral)))
    (identifier)
    (methodCallExpr
      (variableExpr
        (identifier))
      (identifier)
      (argumentList
        (slStringLiteral
          (slStringLiteralPart))))
    (lineComment)
    (identifier))
  (variableExpr
    (identifier))
  (identifier)
  (ERROR)
  (unaryExpr
    (unaryExpr
      (unaryExpr
        (ERROR
          (lineComment)
          (identifier))
        (variableExpr
          (identifier)))))
  (identifier)
  (ERROR)
  (unaryExpr
    (unaryExpr
      (unaryExpr
        (unaryExpr
          (unaryExpr
            (unaryExpr
              (unaryExpr
                (unaryExpr
                  (unaryExpr
                    (ERROR
                      (lineComment)
                      (identifier))
                    (variableExpr
                      (identifier)))))))))))
  (identifier)
  (ERROR
    (methodCallExpr
      (binaryExpr
        (unaryExpr
          (unaryExpr
            (unaryExpr
              (intLiteral))))
        (unaryExpr
          (unaryExpr
            (unaryExpr
              (unaryExpr
                (unaryExpr
                  (ERROR
                    (intLiteral)
                    (identifier))
                  (variableExpr
                    (identifier))))))))
      (identifier)
      (argumentList
        (mlStringLiteral
          (ERROR
            (identifier)
            (identifier)))))
    (identifier))
  (variableExpr
    (identifier))
  (identifier)
  (ERROR)
  (unaryExpr
    (unaryExpr
      (unaryExpr
        (ERROR
          (identifier)
          (identifier)
          (identifier))
        (variableExpr
          (identifier)))))
  (identifier)
  (ERROR
    (binaryExpr
      (binaryExpr
        (unaryExpr
          (unaryExpr
            (unaryExpr
              (ERROR
                (identifier))
              (variableExpr
                (identifier)))))
        (unaryExpr
          (unaryExpr
            (variableExpr
              (identifier)))))
      (ERROR
        (intLiteral))
      (unaryExpr
        (unaryExpr
          (ERROR
            (identifier))
          (variableExpr
            (identifier)))))))
